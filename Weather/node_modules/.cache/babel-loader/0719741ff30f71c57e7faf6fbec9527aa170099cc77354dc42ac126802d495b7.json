{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Charu jain\\\\Desktop\\\\dynamic weather\\\\Weather\\\\src\\\\component\\\\Weatherapp.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport weatherapp from './component/weatherapp';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst months = new Array();\n{\n  months[0] = \"January\";\n  months[1] = \"February\";\n  months[2] = \"March\";\n  months[3] = \"April\";\n  months[4] = \"May\";\n  months[5] = \"June\";\n  months[6] = \"July\";\n  months[7] = \"August\";\n  months[8] = \"September\";\n  months[9] = \"October\";\n  months[10] = \"November\";\n  months[11] = \"December\";\n}\nconst weekdays = new Array();\n{\n  weekdays[0] = \"Sunday\";\n  weekdays[1] = \"Monday\";\n  weekdays[2] = \"Tuesday\";\n  weekdays[3] = \"Wednesday\";\n  weekdays[4] = \"Thursday\";\n  weekdays[5] = \"Friday\";\n  weekdays[6] = \"Saturday\";\n}\nconst time = new Date();\nconst getcurrenttime = () => {\n  var hours = time.getHours();\n  var mins = time.getMinutes();\n  var dur = \"AM\";\n  if (hours > 12) {\n    hours = hours - 12;\n    dur = \"PM\";\n  }\n  console.log(hours + \":\" + mins + \" \" + dur);\n  return `${hours}:${mins}  ${dur}`;\n};\nconst day = new Date();\nconst getcurrentday = () => {\n  var currentday = weekdays[day.getDay()];\n  console.log(currentday);\n  return `${currentday}`;\n};\nconst exactdate = new Date();\nconst getcurrentdate = () => {\n  var date = exactdate.getDate();\n  var month = months[exactdate.getMonth()];\n  var year = exactdate.getFullYear();\n  console.log(date + \" \" + month + \" \" + year);\n  return `${date}   ${month}  ${year}`;\n};\nconst Weatherapp = () => {\n  _s();\n  const [city, setCity] = useState(\"Jabalpur\");\n  const [search, setSearch] = useState('Jabalpur');\n  useEffect(() => {\n    const fetchApi = async () => {\n      const url = `https://api.openweathermap.org/data/2.5/weather?q=${search}&units=metrics&appid=ce6a0e3aa65f58f2abc73e89a226a02a`;\n      const response = await fetch(url);\n      const res = await response.json();\n      console.log(res);\n      setCity(res.main);\n    };\n    fetchApi();\n  }, [search]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        align: \"center\",\n        children: \"Weather Report\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 3\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"inputData\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"search\",\n          className: \"search-bar\",\n          placeholder: \"Enter City name\",\n          onChange: event => {\n            setSearch(event.target.value);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 3\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 3\n      }, this), !city ? /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"INVALID CITY NAME\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 3\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"location\",\n          children: [search, \",India\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 1\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"time\",\n          children: getcurrenttime()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 1\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"day\",\n          children: getcurrentday()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 1\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"date\",\n          children: getcurrentdate()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 1\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"temp\",\n          children: city.temp\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 1\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 2\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 4\n    }, this)\n  }, void 0, false);\n};\n_s(Weatherapp, \"8zNLopI5U8Wt+Vq2BlBVmfeBUS0=\");\n_c = Weatherapp;\nexport default Weatherapp;\nvar _c;\n$RefreshReg$(_c, \"Weatherapp\");","map":{"version":3,"names":["React","useState","useEffect","weatherapp","months","Array","weekdays","time","Date","getcurrenttime","hours","getHours","mins","getMinutes","dur","console","log","day","getcurrentday","currentday","getDay","exactdate","getcurrentdate","date","getDate","month","getMonth","year","getFullYear","Weatherapp","city","setCity","search","setSearch","fetchApi","url","response","fetch","res","json","main","event","target","value","temp"],"sources":["C:/Users/Charu jain/Desktop/dynamic weather/Weather/src/component/Weatherapp.jsx"],"sourcesContent":["import React,{useState,useEffect} from \"react\";\r\nimport weatherapp from './component/weatherapp'\r\n\r\n\r\nconst months=new Array();\r\n{    \r\n    months[0]=\"January\";\r\n    months[1]=\"February\";\r\n    months[2]=\"March\";\r\n    months[3]=\"April\";\r\n    months[4]=\"May\";\r\n    months[5]=\"June\";\r\n    months[6]=\"July\";\r\n    months[7]=\"August\";\r\n    months[8]=\"September\";\r\n    months[9]=\"October\";\r\n    months[10]=\"November\";\r\n    months[11]=\"December\";\r\n\r\n}\r\n\r\nconst weekdays=new Array();\r\n{\r\n    weekdays[0]=\"Sunday\";\r\n    weekdays[1]=\"Monday\";\r\n    weekdays[2]=\"Tuesday\";\r\n    weekdays[3]=\"Wednesday\";\r\n    weekdays[4]=\"Thursday\";\r\n    weekdays[5]=\"Friday\";\r\n    weekdays[6]=\"Saturday\";\r\n}\r\nconst time=new Date();\r\nconst getcurrenttime=()=>{\r\n    var hours=time.getHours();\r\n    var mins=time.getMinutes();\r\n    var dur=\"AM\";\r\n    if(hours>12)\r\n    {hours=hours-12;\r\n    dur=\"PM\";}\r\n    \r\n     \r\n    \r\n    console.log(hours+ \":\" +mins +\" \" +dur);\r\n    return `${hours}:${mins}  ${dur}`;\r\n}\r\n\r\n\r\nconst day=new Date();\r\nconst getcurrentday=()=>{\r\n    var currentday= weekdays[day.getDay()];\r\n    console.log( currentday);\r\n    return `${currentday}`;\r\n}\r\nconst exactdate=new Date();\r\nconst getcurrentdate=()=>{\r\n   var date=exactdate.getDate();\r\n    var month= months[exactdate.getMonth()];\r\n    var year=exactdate.getFullYear();\r\n    console.log(date+ \" \" +month+ \" \" +year);\r\n    return `${date}   ${month}  ${year}`;\r\n     \r\n}\r\nconst Weatherapp=()=>\r\n{  const[city,setCity]=useState(\"Jabalpur\");\r\n\r\n    const[search,setSearch]=useState('Jabalpur');\r\n\r\n    useEffect( ()=>\r\n    {    const fetchApi=async ()=>{\r\n        const url=`https://api.openweathermap.org/data/2.5/weather?q=${search}&units=metrics&appid=ce6a0e3aa65f58f2abc73e89a226a02a`\r\n         const response = await fetch(url);\r\n         const res= await response.json();\r\n        console.log(res);\r\n        setCity(res.main);\r\n    }\r\n        fetchApi();\r\n    },[search])\r\n\r\n\r\n    return(<>\r\n   <div className='container' >\r\n  <h1 align='center'>Weather Report</h1>\r\n  <div className=\"inputData\">\r\n  <input type=\"search\" className=\"search-bar\" placeholder=\"Enter City name\" onChange={(event)=>{setSearch(event.target.value)}} >\r\n    </input>\r\n    \r\n</div>\r\n{!city?\r\n (<h1>INVALID CITY NAME</h1>):\r\n <div> \r\n<div id=\"location\" >{search},India</div>\r\n<div id=\"time\" >{getcurrenttime()}</div>\r\n<div id=\"day\" >{getcurrentday()}</div>\r\n<div id=\"date\" >{getcurrentdate()}</div>\r\n<div id=\"temp\" >{city.temp}</div>\r\n</div>}\r\n</div>\r\n  \r\n  </>\r\n  )\r\n}\r\nexport default Weatherapp;"],"mappings":";;AAAA,OAAOA,KAAK,IAAEC,QAAQ,EAACC,SAAS,QAAO,OAAO;AAC9C,OAAOC,UAAU,MAAM,wBAAwB;AAAA;AAAA;AAG/C,MAAMC,MAAM,GAAC,IAAIC,KAAK,EAAE;AACxB;EACID,MAAM,CAAC,CAAC,CAAC,GAAC,SAAS;EACnBA,MAAM,CAAC,CAAC,CAAC,GAAC,UAAU;EACpBA,MAAM,CAAC,CAAC,CAAC,GAAC,OAAO;EACjBA,MAAM,CAAC,CAAC,CAAC,GAAC,OAAO;EACjBA,MAAM,CAAC,CAAC,CAAC,GAAC,KAAK;EACfA,MAAM,CAAC,CAAC,CAAC,GAAC,MAAM;EAChBA,MAAM,CAAC,CAAC,CAAC,GAAC,MAAM;EAChBA,MAAM,CAAC,CAAC,CAAC,GAAC,QAAQ;EAClBA,MAAM,CAAC,CAAC,CAAC,GAAC,WAAW;EACrBA,MAAM,CAAC,CAAC,CAAC,GAAC,SAAS;EACnBA,MAAM,CAAC,EAAE,CAAC,GAAC,UAAU;EACrBA,MAAM,CAAC,EAAE,CAAC,GAAC,UAAU;AAEzB;AAEA,MAAME,QAAQ,GAAC,IAAID,KAAK,EAAE;AAC1B;EACIC,QAAQ,CAAC,CAAC,CAAC,GAAC,QAAQ;EACpBA,QAAQ,CAAC,CAAC,CAAC,GAAC,QAAQ;EACpBA,QAAQ,CAAC,CAAC,CAAC,GAAC,SAAS;EACrBA,QAAQ,CAAC,CAAC,CAAC,GAAC,WAAW;EACvBA,QAAQ,CAAC,CAAC,CAAC,GAAC,UAAU;EACtBA,QAAQ,CAAC,CAAC,CAAC,GAAC,QAAQ;EACpBA,QAAQ,CAAC,CAAC,CAAC,GAAC,UAAU;AAC1B;AACA,MAAMC,IAAI,GAAC,IAAIC,IAAI,EAAE;AACrB,MAAMC,cAAc,GAAC,MAAI;EACrB,IAAIC,KAAK,GAACH,IAAI,CAACI,QAAQ,EAAE;EACzB,IAAIC,IAAI,GAACL,IAAI,CAACM,UAAU,EAAE;EAC1B,IAAIC,GAAG,GAAC,IAAI;EACZ,IAAGJ,KAAK,GAAC,EAAE,EACX;IAACA,KAAK,GAACA,KAAK,GAAC,EAAE;IACfI,GAAG,GAAC,IAAI;EAAC;EAITC,OAAO,CAACC,GAAG,CAACN,KAAK,GAAE,GAAG,GAAEE,IAAI,GAAE,GAAG,GAAEE,GAAG,CAAC;EACvC,OAAQ,GAAEJ,KAAM,IAAGE,IAAK,KAAIE,GAAI,EAAC;AACrC,CAAC;AAGD,MAAMG,GAAG,GAAC,IAAIT,IAAI,EAAE;AACpB,MAAMU,aAAa,GAAC,MAAI;EACpB,IAAIC,UAAU,GAAEb,QAAQ,CAACW,GAAG,CAACG,MAAM,EAAE,CAAC;EACtCL,OAAO,CAACC,GAAG,CAAEG,UAAU,CAAC;EACxB,OAAQ,GAAEA,UAAW,EAAC;AAC1B,CAAC;AACD,MAAME,SAAS,GAAC,IAAIb,IAAI,EAAE;AAC1B,MAAMc,cAAc,GAAC,MAAI;EACtB,IAAIC,IAAI,GAACF,SAAS,CAACG,OAAO,EAAE;EAC3B,IAAIC,KAAK,GAAErB,MAAM,CAACiB,SAAS,CAACK,QAAQ,EAAE,CAAC;EACvC,IAAIC,IAAI,GAACN,SAAS,CAACO,WAAW,EAAE;EAChCb,OAAO,CAACC,GAAG,CAACO,IAAI,GAAE,GAAG,GAAEE,KAAK,GAAE,GAAG,GAAEE,IAAI,CAAC;EACxC,OAAQ,GAAEJ,IAAK,MAAKE,KAAM,KAAIE,IAAK,EAAC;AAExC,CAAC;AACD,MAAME,UAAU,GAAC,MACjB;EAAA;EAAG,MAAK,CAACC,IAAI,EAACC,OAAO,CAAC,GAAC9B,QAAQ,CAAC,UAAU,CAAC;EAEvC,MAAK,CAAC+B,MAAM,EAACC,SAAS,CAAC,GAAChC,QAAQ,CAAC,UAAU,CAAC;EAE5CC,SAAS,CAAE,MACX;IAAK,MAAMgC,QAAQ,GAAC,YAAU;MAC1B,MAAMC,GAAG,GAAE,qDAAoDH,MAAO,uDAAsD;MAC3H,MAAMI,QAAQ,GAAG,MAAMC,KAAK,CAACF,GAAG,CAAC;MACjC,MAAMG,GAAG,GAAE,MAAMF,QAAQ,CAACG,IAAI,EAAE;MACjCxB,OAAO,CAACC,GAAG,CAACsB,GAAG,CAAC;MAChBP,OAAO,CAACO,GAAG,CAACE,IAAI,CAAC;IACrB,CAAC;IACGN,QAAQ,EAAE;EACd,CAAC,EAAC,CAACF,MAAM,CAAC,CAAC;EAGX,oBAAO;IAAA,uBACR;MAAK,SAAS,EAAC,WAAW;MAAA,wBAC3B;QAAI,KAAK,EAAC,QAAQ;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAAoB,eACtC;QAAK,SAAS,EAAC,WAAW;QAAA,uBAC1B;UAAO,IAAI,EAAC,QAAQ;UAAC,SAAS,EAAC,YAAY;UAAC,WAAW,EAAC,iBAAiB;UAAC,QAAQ,EAAGS,KAAK,IAAG;YAACR,SAAS,CAACQ,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC;UAAA;QAAE;UAAA;UAAA;UAAA;QAAA;MACnH;QAAA;QAAA;QAAA;MAAA,QAEN,EACL,CAACb,IAAI,gBACJ;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAA0B,gBAC3B;QAAA,wBACD;UAAK,EAAE,EAAC,UAAU;UAAA,WAAGE,MAAM;QAAA;UAAA;UAAA;UAAA;QAAA,QAAa,eACxC;UAAK,EAAE,EAAC,MAAM;UAAA,UAAGvB,cAAc;QAAE;UAAA;UAAA;UAAA;QAAA,QAAO,eACxC;UAAK,EAAE,EAAC,KAAK;UAAA,UAAGS,aAAa;QAAE;UAAA;UAAA;UAAA;QAAA,QAAO,eACtC;UAAK,EAAE,EAAC,MAAM;UAAA,UAAGI,cAAc;QAAE;UAAA;UAAA;UAAA;QAAA,QAAO,eACxC;UAAK,EAAE,EAAC,MAAM;UAAA,UAAGQ,IAAI,CAACc;QAAI;UAAA;UAAA;UAAA;QAAA,QAAO;MAAA;QAAA;QAAA;QAAA;MAAA,QAC3B;IAAA;MAAA;MAAA;MAAA;IAAA;EACA,iBAED;AAEL,CAAC;AAAA,GAtCKf,UAAU;AAAA,KAAVA,UAAU;AAuChB,eAAeA,UAAU;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}